<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>RMHUB</title>
    <link rel="icon" type="image/x-icon" href="/images/NavImg.jpg">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"
        rel="stylesheet">
    <link rel="stylesheet"
        href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">


    <style>
        body {
            font-family: 'Open Sans', sans-serif;
            line-height: 1.5;
            margin: 0;
            padding: 0;
            background-color: #f4f4f4;
        }
    

        .container {
            padding-top: 70px; /* Adjusted padding to accommodate navbar */
            padding: 20px;
            max-width: 1200px; /* Limit container width */
            margin: 0 auto; /* Center container horizontally */
        }
        .nav {
            background-color: #3cf696;
            position: fixed;
            top: 0;
            z-index: 1;
            width: 100%;
            text-align: center; /* Center the logo */
        }
    
        .nav img {
            height: 50px;
            width: auto; /* Maintain aspect ratio */
        }
    
        .back-btn {
            position: absolute;
            top: 10%;
            left: 10px;
            transform: translateY(-50%); /* Center vertically */
            background-color: transparent;
            border: none;
            font-size: 16px;
            color: #3cf696;
            cursor: pointer;
        }
    
        .back-btn i {
            margin-right: 5px;
        }

        .address-area,
        .payment-area,
        .coupon-area {
            background-color: #e5e6de;
            padding: 20px;
            margin-bottom: 20px;
            border-radius: 10px;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px; /* Reduce margin for smaller screens */
        }

        th,
        td {
            padding: 8px;
            border: 1px solid #dee2e6;
            text-align: center;
        }

        th {
            background-color: #3cf696;
        }

        td {
            background-color: #e5e6de;
        }

        th,
        td:hover {
            background-color: #d8f0dd;
        }

        .btn {
            padding: 10px 20px;
            border-radius: 10px;
            display: flex;
            justify-content: center;
            cursor: pointer;
        }

        .btn-warning {
            background-color: #ffd166;
            border-color: #ffd166;
            color: #000;
        }

        .btn-success {
            background-color: #3cf696;
            border-color: #3cf696;
            color: #fff;
        }

        button {
            cursor: pointer;
        }

        .loader {
            border: 16px solid #f3f3f3;
            border-radius: 50%;
            border-top: 16px solid #3cf696;
            width: 120px;
            height: 120px;
            animation: spin 2s linear infinite;
            position: fixed;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%);
            display: none; /* Initially hide the loader */
            z-index: 9999;
        }

        @keyframes spin {
            0% {
                transform: rotate(0deg);
            }

            100% {
                transform: rotate(360deg);
            }
        }

        /* Other styles remain the same */

        @media only screen and (max-width: 600px) {
            .container {
                padding: 10px;
            }
            
            .nav img {
                height: 40px;
            }

            .address-area,
            .payment-area,
            .coupon-area {
                padding: 10px;
            }
            
            .back-btn {
                top: 20px;
                left: 20px;
            }
            
            table {
                margin-bottom: 10px; /* Reduce margin further for smaller screens */
                font-size: 14px; /* Decrease font size for smaller screens */
            }
            
            .loader {
                border-width: 8px; /* Adjust loader border width for smaller screens */
                width: 80px; /* Adjust loader size for smaller screens */
                height: 80px; /* Adjust loader size for smaller screens */
                display:flex;
                justify-content: center;
                align-items: center;

            }
        }
    </style>
</head>

<body>

    <div class="nav">
        <img src="/images/NavImg.jpg" alt="Logo">
    </div>
    <button type="button" class="back-btn" onclick="location.href ='/cart/getcart'">
        <i class="fas fa-arrow-left"></i> Back To Cart
    </button>
    <div class="container">
        <h2 style="display: flex; justify-content:center;margin-top:50px"><img src="/images/checkout-svgrepo-com.svg"
                alt="Logo" class="logo-small"
                style="width:35px;height:35px;border: 2px solid #3cf696;border-radius:50%;background-color: #e5e6de;">Checkout
        </h2>

        <!-- Shipping Address -->
        <div class="address-area">
            <h2 style="display: flex"><img src="/images/home-address-residential-address-svgrepo-com.svg "
                    alt="Logo" class="logo-small"
                    style="width:35px;height:35px;border: 2px solid #3cf696;border-radius:50%;background-color: #e5e6de;">
                Shipping Address</h2>

            <form action="/cart/checkout" method="POST" id="checkoutForm">
                <select name="shippingAddress" id="shippingAddress"
                    style="width:100%; height:30px; border-radius: 13px;background-color:#d8f0dd">
                    <% user.address.forEach((address)=> { %>
                        <option value="<%= address._id %>">
                            <%= address.addressLineOne %>, <%= address.addressLineTwo %>, <%= address.city
                                        %>, <%= address.state %>, <%= address.pincode %>
                        </option>
                        <% }); %>
                </select>

                <!-- Hidden input field to store selected address -->
                <input type="hidden" name="selectedAddress" id="selectedAddress">

                <!-- Use This Address Button -->
                <button type="button" class="btn btn-success" onclick="useAddress()"
                    style="margin-top: 10px">Use This
                    Address</button>
        </div>

        <!-- Cart Details -->
        <div>
            <h2>Order Details</h2>
            <div style="overflow-x:auto;"> <!-- Add horizontal scrolling for smaller screens -->
                <table>
                    <thead>
                        <tr>
                            <th>SI No.</th>
                            <th>Product Image</th>
                            <th>Product Name</th>
                            <th>Description</th>
                            <th>Total Price</th>
                            <th>Quantity</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Your table rows for cart details here -->
                        <% cartItems.forEach((item, index)=> { %>
                            <tr>
                                <td>
                                    <%= index + 1 %>
                                </td>
                                <td><img src="/<%= item.productId.image[0] %>" alt="..."
                                        class="img-responsive"
                                        style="max-width: 100px; max-height: 100px;" /></td>
                                <td>
                                    <h4>
                                        <%= item.productId.model %>
                                    </h4>
                                </td>
                                <td>
                                    <%= item.productId.description %>
                                </td>
                                <td>₹<%= item.price %>
                                </td>
                                <td>
                                    <%= item.quantity %>
                                </td>
                            </tr>
                            <% }); %>
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Order Summary -->
        <div class="coupon-area">
            <h2 style="display: flex">
                <img src="/images/c2.svg" alt="Coupon" class="logo-small"
                    style="width: 35px; height: 35px; border: 2px solid #3cf696; border-radius: 50%; background-color: #e5e6de;">
                Apply Coupon
            </h2>

            <!-- Coupon Dropdown -->
            <select name="coupon" id="coupon"
                style="width: 100%; height: 30px; border-radius: 13px; background-color: #d8f0dd;">
                <% if (coupon.isApplied) { %>
                    <option value="<%= coupon.couponCode %>" disabled selected>
                        <%= coupon.couponCode %> - Applied
                    </option>
                    <% } else { %>

                        <option value="" selected disabled>Select Coupon</option>
                        <% } %>
                            <% coupons.forEach((item)=> { %>
                                <% if (!coupon.isApplied) { %>
                                    <option value="<%= item.code %>">
                                        <%= item.code %> - <%= item.discountType==='fixed' ? '₹' : 'percent'
                                                %>
                                                <%= item.discountValue %> OFF
                                    </option>


                                    <% } %>
                                        <% }); %>
            </select>
            <input type="hidden" name="couponCode" id="couponCode">
            <input type="hidden" id="couponsData" value='<%- JSON.stringify(coupons) %>'>


            <!-- Apply Coupon Button -->
            <button type="button" class="btn btn-warning" onclick="applyCoupon()" <% if (coupon.isApplied) {
                %>
                disabled
                <% } %>
                    style="margin-top: 10px;">Apply
            </button>
        </div>

        <!-- Total Price and Discounted Amount -->
        <div class="payment-area" style="margin-top:50px">
            <h2 style="text-align: center; margin-bottom:30px;">Amount Summary</h2>
            <ul>
                <li>Total Price: ₹ <span id="totalPrice">
                        <%= coupon.discountValue ? (parseFloat(totalPrice) +
                            parseFloat(coupon.discountValue)).toFixed(2) : totalPrice.toFixed(2) %>
                    </span></li>
                <li id="discountedAmount" style="display: <%- coupon.isApplied ? 'block' : 'none' %>;">
                    Discounted
                    Amount: ₹ <span id="discountedPrice"><%-
                            Number(coupon.discountValue).toLocaleString('en-IN') %></span>
                </li>
                <li id="finalAmount">Net Amount: ₹ <span id="finalPrice">
                        <%= totalPrice.toFixed(2) %>
                    </span></li>
            </ul>
            <button type="button" class="btn btn-danger" <% if (!coupon.isApplied) { %>
                disabled
                <% } %> onclick="removeCoupon()">Remove Coupon
            </button>
        </div>
        <!-- Payment Options -->
        <div class="payment-area">
            <h2 style="display: flex"><img src="/images/payment-method-svgrepo-com.svg " alt="Logo"
                    class="logo-small"
                    style="width:35px;height:35px;border: 2px solid #3cf696;border-radius:50%;background-color: #e5e6de;">
                Payment Method</h2>
            <div>
                <label>
                    <input type="radio" name="paymentMethod" value="cod"
                        onclick="selectPaymentMethod('cod')"> Cash on
                    Delivery
                </label>
                <br>
                <label>
                    <input type="radio" name="paymentMethod" value="Wallet" <% if (insufficient) { %>
                    disabled
                    <% } %> onclick="selectPaymentMethod('Wallet')">
                        Wallet (Balance: ₹<span id="walletBalance" style="font-weight: bold;">
                            <%= Number(user.wallet.balance).toLocaleString('en-IN') %>
                        </span> <i class="fa fa-wallet" style="color: #3cf696;"></i>
                        )

                        <% if (insufficient) { %>
                            <small style="color:red" class="text-danger">Insufficient Balance</small>
                            <% } %>
                </label>
                <br>
                <label>
                    <input type="radio" name="paymentMethod" value="paypal"
                        onclick="selectPaymentMethod('paypal')">
                    PayPal
                </label>

            </div>

            <!-- Hidden input field to store selected payment method -->
            <input type="hidden" name="selectedPaymentMethod" id="selectedPaymentMethod">

            <!-- Proceed Button -->
            <div style="display:flex; justify-content:center"><button type="button" class="btn btn-success"
                    onclick="confirmOrder()">Proceed</button></div>

            <!-- <div class="loader" id="loader"></div> -->

            </form>
        </div>
    </div>


        <!-- SweetAlert2 library for showing alert -->
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <!-- <script>
        const coupons = <%- JSON.stringify(coupons) %>;
    </script> -->
        <script>
            // Access the hidden input field
            const couponsDataInput = document.getElementById('couponsData');

            // Parse the JSON string into a JavaScript object
            const coupons = JSON.parse(couponsDataInput.value);

            // Now you can use the 'coupons' object as needed
            console.log(coupons);
        </script>
        <script>
            function useAddress() {
                // Get the selected address
                const selectedAddressId = document.getElementById('shippingAddress').value;
                const selectedAddress = document.querySelector(`option[value="${selectedAddressId}"]`).text;

                // Set the selected address into the hidden input field
                document.getElementById('selectedAddress').value = selectedAddress;
            }


        </script>


        <script>
            function selectPaymentMethod(method) {
                // Set the selected payment method into the hidden input field
                document.getElementById('selectedPaymentMethod').value = method;

                // Call the appropriate function based on the selected payment method

            }

            function confirmOrder() {
                // Get the selected address
                const selectedAddress = document.getElementById('selectedAddress').value;

                // Check if the address is empty or not selected
                if (!selectedAddress) {
                    // Show SweetAlert indicating that the address needs to be selected
                    Swal.fire({
                        title: "Address Not Selected",
                        text: "Please select an address before proceeding.",
                        icon: "error",
                        confirmButtonColor: "#3cf696",
                    });
                    return; // Exit the function if address is not selected
                }

                // Get the selected payment method
                const selectedPaymentMethod = document.getElementById('selectedPaymentMethod').value;

                // Show order confirmation alert
                Swal.fire({
                    title: "Order Confirmation",
                    text: "Are you sure you want to place this order?",
                    icon: "question",
                    showCancelButton: true,
                    confirmButtonColor: "#3cf696",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Confirm Order"
                }).then((result) => {
                    if (result.isConfirmed) {
                        if (selectedPaymentMethod === 'paypal') {
                            toggleLoader(true);
                            return initiatePayPalPayment();
                        }

                        // Submit the form
                        document.getElementById('checkoutForm').submit();
                    }
                });
            }

           
            async function applyCoupon() {
                const selectedCoupon = document.getElementById('coupon').value;
                console.log(`Selected coupon: ${selectedCoupon}`);

                let couponCode = selectedCoupon.toString();
                try {
                    let body = { couponCode: couponCode };
                    console.log(body, 'body');
                    let response = await fetch('/applyCoupon', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(body),
                    });
                    if (!response.ok) {
                        const errorData = await response.json();
                        throw new Error(errorData.message || 'Failed to apply coupon')
                    }
                    let data = await response.json();
                    if (data.success) {
                        Swal.fire({
                            title: "Coupon Applied",
                            text: data.message,
                            icon: "success",
                            confirmButtonColor: "#3cf696",
                        }).then(() => {
                            location.reload();
                        });
                    } else {
                        throw new Error(data.message);
                    }

                } catch (e) {
                    console.log(e);
                    Swal.fire({
                        title: "Coupon Not Applicable",
                        text: e.message,
                        icon: "error",
                    });
                }
                // Set the selected coupon code into the hidden input field
                document.getElementById('couponCode').value = selectedCoupon;

                const coupon = coupons.find(coupon => coupon.code === selectedCoupon);
                const totalPriceElement = document.getElementById('totalPrice');
                let totalPrice = parseFloat(totalPriceElement.innerText);

                if (coupon) {
                    const discount = coupon.discountValue;

                    // Check if the discount is greater than total price
                    if (discount > totalPrice) {
                        Swal.fire({
                            title: "Coupon Not Applicable",
                            text: "The coupon discount exceeds the total order price.",
                            icon: "error",
                            confirmButtonColor: "#3cf696",
                        });
                        // Reset the coupon field and return
                        document.getElementById('coupon').value = '';
                        return;
                    }

                    const discountedPrice = totalPrice - discount;
                    console.log(`Discounted price: ${discountedPrice}`);
                    // Update UI with discounted price
                    document.getElementById('discountedAmount').style.display = 'block';
                    document.getElementById('discountedPrice').innerText = discount;
                    document.getElementById('finalPrice').innerText = discountedPrice;
                } else {
                    // If no coupon applied, proceed with the original total price
                    document.getElementById('discountedAmount').style.display = 'none'; // Hide discount section
                    document.getElementById('finalPrice').innerText = totalPrice; // Update final price to original total price
                    document.getElementById('netAmountInput').value = totalPrice; // Pass original total price to backend
                }
            }

            async function removeCoupon() {
                // Clear the selected coupon from the hidden input field
                document.getElementById('couponCode').value = '';

                Swal.fire({
                    title: "Coupon Removed",
                    text: "Coupon removed successfully",
                    icon: "success",
                }).then(async () => {
                    try {
                        let response = await fetch('/removeCoupon', {
                            method: 'POST',
                        })
                        if (!response.ok) {
                            throw new Error('Failed to remove coupon');
                        }
                        let data = await response.json();
                        if (data.success) {
                            Swal.fire({
                                title: "Coupon Removed",
                                text: "Coupon removed successfully",
                                icon: "success", showConfirmButton: false,
                                timer: 1500
                            }).then(() => {
                                location.reload();
                            })
                        }
                        else {
                            throw new Error(data.message);
                        }
                    } catch (e) {
                        console.log(e);
                        Swal.fire({
                            title: "Coupon Not Removed",
                            text: e.message,
                            icon: "error", showConfirmButton: false,
                            timer: 1500
                        }).then(() => {
                            location.reload();
                        })
                    }
                });

                // Update UI to reflect no applied coupon
                document.getElementById('discountedAmount').style.display = 'none'; // Hide discount section
                document.getElementById('finalPrice').innerText = parseFloat(document.getElementById('totalPrice').innerText); // Update final price to original total price
                document.getElementById('netAmountInput').value = parseFloat(document.getElementById('totalPrice').innerText); // Pass original total price to backend
            }

            function initiatePayPalPayment() {



                let finalPrice;
                const couponCode = document.getElementById('couponCode').value;
                if (couponCode) {
                    // If a coupon is applied, use the discounted price
                    finalPrice = parseFloat(document.getElementById('finalPrice').innerText);
                    console.log(`Final price (with coupon): ${finalPrice}`);
                    console.log(`Coupon code: ${couponCode}`);
                } else {
                    // If no coupon applied, use the original total price
                    finalPrice = parseFloat(document.getElementById('totalPrice').innerText);
                    console.log(`Final price (without coupon): ${finalPrice}`);
                }

                const selectedAddressId = document.getElementById('shippingAddress').value;
                const selectedAddress = document.querySelector(`option[value="${selectedAddressId}"]`).text;
                console.log(`Shipping address: ${selectedAddress}`);



                // Send a POST request to the backend endpoint to initiate PayPal payment
                fetch('/payment/payment', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        amount: finalPrice,
                        address: selectedAddress,
                        couponCode: couponCode
                    })
                })
                    .then(response => response.json())
                    .then(data => {
                        // Redirect the user to the PayPal payment page
                        window.location.href = data.approvalUrl;
                    })
                    .catch(error => {
                        console.error('Error initiating PayPal payment:', error);
                        // Handle error, display error message to the user, etc.
                    });
                console.log('Payment initiated');

            }

        </script>
        <script>
            // Function to check the total amount and enable/disable COD accordingly


            // Function to handle payment method selection
            function selectPaymentMethod(method) {
                // Get the selected payment method into the hidden input field
                document.getElementById('selectedPaymentMethod').value = method;

                // Check if COD is selected and the amount is less than or equal to 1000
                const finalPrice = parseFloat(document.getElementById('finalPrice').innerText);
                if (method === 'cod' && finalPrice >= 1000) {
                    Swal.fire({
                        toast: true,
                        icon: 'error',
                        position: 'top-end',
                        title: "COD Not Available",
                        text: "Cash on Delivery is only available for orders above ₹1000.",
                        confirmButtonColor: "#3cf696",
                    });
                    // Unselect the COD option
                    document.querySelector('input[name="paymentMethod"][value="cod"]').checked = false;
                    return;
                }

                // Proceed with the selected payment method
                document.getElementById('selectedPaymentMethod').value = method;
            }
        </script>





</body>

</html>