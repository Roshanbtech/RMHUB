<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>RMHUB</title>
    <link rel="icon" type="image/x-icon" href="/images/NavImg.jpg">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/11.1.2/sweetalert2.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">


    <style>
        body {
            background-color: #f8f9fa;
            font-family: Arial, sans-serif;
        }

        .navbar {
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 15px;
            background-color: #3cf696;
            height: 60px;
        }

        .navbar img {
            height: 100%;
        }

        .container {
            max-width: 600px;
            margin: 0 auto;
            margin-top: 30px;
            margin-bottom: 30px;
        }

        .form-container {
            width: 100%;
            padding: 20px;
            background-color: #fff;
            border-radius: 20px;
            box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.1);
            animation: slideIn 1s ease;
            margin: 0 auto;
        }

        @keyframes slideIn {
            from {
                opacity: 0;
                transform: translateY(-50px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .btn-success {
            background-color: #3cf696;
            border-color: #3cf696;
            color: #fff;
            font-weight: bold;
            transition: all 0.3s ease;
            display: inline-block;
            padding: 10px 20px;
            border-radius: 10px;
            cursor: pointer;
            width: 100%;
            margin-top: 20px;
        }

        .btn-success:hover {
            background-color: #36e687;
            border-color: #36e687;
        }

        .product-title {
            background-color: #3cf696;
            color: #fff;
            padding: 15px;
            border-radius: 20px;
            margin-bottom: 30px;
            font-size: 28px;
            text-align: center;
        }

        /* Form styles */
        .form-group {
            margin-bottom: 15px;
        }

        .form-label {
            font-weight: bold;
            color: black;
        }

        .form-control {
            border-radius: 10px;
            border: 1px solid #3CF696;
            padding: 10px;
            width: 100%;
            background-color: #ffffff;
        }

        .image-container {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
        }

        .preview-image {
            max-width: 100px;
            max-height: 100px;
            object-fit: cover;
        }

        .preview-image-wrapper {
            position: relative;
            display: inline-block;
            overflow: hidden;
        }

        .close-button {
            position: absolute;
            top: 5px;
            right: 5px;
            padding: 5px;
            background-color: red;
            color: white;
            border: none;
            border-radius: 50%;
            cursor: pointer;
            z-index: 1;
        }

        /* Cropper modal styles */
        #cropperModal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 9999;
            justify-content: center;
            align-items: center;
        }

        .cropper-container {
            max-width: 90%;
            max-height: 90%;
            /* Add these properties to make the Cropper container resizable */
            width: auto;
            height: auto;
            border: 2px solid #3cf696;
            resize: both;
            overflow: hidden;
        }
        


        .cropper-preview {
            display: flex;
            justify-content: center;
            align-items: center;
            width: 100%;
            height: 300px;
            /* Adjust as needed */
            background-color: #ffffff;
            overflow: hidden;
        }

        .back-btn {
            position: absolute;
            top: 60px;
            left: 40px;
            background-color: transparent;
            border: none;
            font-size: 16px;
            color: #3cf696;
            cursor: pointer;
        }

        .back-btn i {
            margin-right: 5px;
        }

        
    </style>
</head>

<body>
    <!-- <div class="navbar">
        <img src="/images/NavImg.jpg" alt="RMHUB">
    </div> -->

    <!-- <button type="button" class="back-btn" onclick="location.href ='/admin/products'">
        <i class="fas fa-arrow-left"></i> Back To Products
    </button> -->

    <%- include("sidebar") %>

    <div class="container">
        <div class="form-container">
            <h2 class="product-title">Add Products</h2>
            <form id="productForm" action="/admin/addproducts" method="post" enctype="multipart/form-data"
                onsubmit="return validateForm()">
                <div class="form-group">
                    <input type="text" class="form-control" placeholder="Product Name" id="productName"
                        name="productName">
                    <div class="error" id="productNameError"></div>
                </div>
                <div class="form-group">
                    <input type="number" class="form-control" placeholder="Price" id="price" name="price">
                    <div class="error" id="priceError"></div>
                </div>
                <div class="form-group">
                    <input type="text" class="form-control" placeholder="Model" id="model" name="model">
                    <div class="error" id="modelError"></div>
                </div>
                <div class="form-group">
                    <textarea class="form-control" placeholder="Description" id="description"
                        name="description"></textarea>
                    <div class="error" id="descriptionError"></div>
                </div>
                <div class="form-group">
                    <input type="number" class="form-control" placeholder="Available Stock" name="availableStock"
                        id="availableStock">
                    <div class="error" id="availableStockError"></div>
                </div>
                <div class="form-group">
                    <input type="file" class="form-control" name="image" id="image" multiple>
                    <div class="error" id="imageError"></div>
                </div>
                <div id="preview" class="image-container"></div>
                <div class="form-group">
                    <input type="text" class="form-control" placeholder="Color" id="color" name="color">
                    <div class="error" id="colorError"></div>
                </div>
                <div class="form-group">
                    <select class="form-control" name="category" id="category" style="background-color:#d8f0dd">
                        <option value="" disabled selected>Select Category:</option>
                        <% categories.forEach(category=> { %>
                            <option value="<%= category._id %>">
                                <%= category.name %>
                            </option>
                            <% }) %>
                    </select>
                    <div class="error" id="categoryError"></div>
                </div>
                <button type="submit" class="btn btn-success">Add Product</button>
            </form>
        </div>
    </div>

    <!-- Cropper Modal -->
    <!-- Cropper Modal -->
    <div id="cropperModal">
        <div class="cropper-container">
            <div class="cropper-preview"></div>
            <button id="cropButton">Crop</button>
        </div>
    </div>


    <!-- JS, Popper.js, jQuery, Cropper.js -->
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/11.1.2/sweetalert2.min.js"></script>

    <script>
        // JavaScript code for Cropper setup and handling goes here
        document.getElementById('image').addEventListener('change', function () {
            const files = this.files;
            if (files && files.length > 0) {
                const preview = document.getElementById('preview');
                // Clear previous previews
                preview.innerHTML = '';
                // Create a mapping between preview image elements and their corresponding files
                const filePreviewMap = new Map();
                for (let i = 0; i < files.length; i++) {
                    const file = files[i];
                    // Validate file type
                    if (file.type.startsWith('image/')) {
                        const reader = new FileReader();
                        reader.onload = function (e) {
                            const img = new Image();
                            img.src = e.target.result;
                            img.classList.add('preview-image');

                            // Create a preview image wrapper
                            const imageWrapper = document.createElement('div');
                            imageWrapper.classList.add('preview-image-wrapper');

                            // Create close button
                            const closeButton = document.createElement('button');
                            closeButton.innerHTML = 'X';
                            closeButton.classList.add('close-button');
                            closeButton.onclick = function () {
                                // Remove the corresponding preview image
                                imageWrapper.remove();
                                /// Get the input element
                                const inputElement = document.getElementById('image');

                                // Remove the corresponding file from the input files array
                                const fileToRemove = filePreviewMap.get(img);
                                if (fileToRemove) {
                                    const newFiles = Array.from(inputElement.files).filter(file => file !== fileToRemove);
                                    // Create a new FileList object
                                    const newFileList = new DataTransfer();
                                    newFiles.forEach(file => newFileList.items.add(file));
                                    // Set the new FileList object to the input element
                                    inputElement.files = newFileList.files;
                                    // Update file count
                                    updateFileCount();
                                }
                            };

                            // Append image and close button to wrapper
                            imageWrapper.appendChild(img);
                            imageWrapper.appendChild(closeButton);

                            // Append wrapper to preview container
                            preview.appendChild(imageWrapper);

                            // Add the file to the map
                            filePreviewMap.set(img, file);

                            // Initialize Cropper after image is loaded
                            img.onload = function () {
                                const cropper = new Cropper(img, {
                                    aspectRatio: NaN,
                                    viewMode: 2,
                                    autoCropArea: 1,
                                    crop: function (e) {
                                        // Output the result data for cropping image.
                                        console.log(e.detail.x);
                                        console.log(e.detail.y);
                                        console.log(e.detail.width);
                                        console.log(e.detail.height);
                                        console.log(e.detail.rotate);
                                        console.log(e.detail.scaleX);
                                        console.log(e.detail.scaleY);
                                    }
                                });
                            };

                            // Update file count
                            updateFileCount();
                        };
                        reader.readAsDataURL(file);
                    } else {
                        // Reject non-image files
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: 'Please select only image files.',
                            toast: true,
                            position: 'top-end',
                            confirmBButtonColor: '#3cf696',
                            confirmButtonText: 'OK',
                            showConfirmButton: true,
                        });
                        event.target.value = ''; // Clear selected files
                    }
                }
            }
        });

        function updateFileCount() {
            const count = document.getElementById('preview').childElementCount;
            console.log("File count:", count);
            // Update the file count display or perform any other necessary actions
        }

    </script>

    <script>
        // JavaScript code for form validation goes here
        function validateForm() {
            var productName = document.getElementById('productName').value.trim();
            var price = parseFloat(document.getElementById('price').value);
            var model = document.getElementById('model').value.trim();
            var description = document.getElementById('description').value.trim();
            var availableStock = parseFloat(document.getElementById('availableStock').value);
            var category = document.getElementById('category').value.trim();
            var image = document.getElementById('image').files;

            var isValid = true;

            // Validate product name
            if (productName === '') {
                document.getElementById('productNameError').innerHTML = '*Product Name is required';
                document.getElementById('productNameError').style.color = 'red';
                document.getElementById('productName').style.borderColor = 'red';
                isValid = false;
            }
            else if (productName.trim === ' ') {
                document.getElementById('productNameError').innerHTML = '*Product Name cannot contain only spaces';
                document.getElementById('productNameError').style.color = 'red';
                document.getElementById('productName').style.borderColor = 'red';
            }
            else {
                document.getElementById('productNameError').innerHTML = '';
                document.getElementById('productName').style.borderColor = '#3cf696';
            }

            // Validate price
            if (isNaN(price) || price <= 0) {
                document.getElementById('priceError').innerHTML = '*Price must be a positive number';
                document.getElementById('priceError').style.color = 'red';
                document.getElementById('price').style.borderColor = 'red';
                isValid = false;
            } else {
                document.getElementById('priceError').innerHTML = '';
                document.getElementById('price').style.borderColor = '#3cf696';
            }

            // Validate model
            if (model === '') {
                document.getElementById('modelError').innerHTML = '*Model is required';
                document.getElementById('modelError').style.color = 'red';
                document.getElementById('model').style.borderColor = 'red';
                isValid = false;
            }
            else if (model.trim() === ' ') {
                document.getElementById('modelError').innerHTML = '*Model cannot contain only spaces';
                document.getElementById('modelError').style.color = 'red';
                document.getElementById('model').style.borderColor = 'red';
            }
            else {
                document.getElementById('modelError').innerHTML = '';
            }

            // Validate description
            if (description === '' || description.trim() === ' ') {
                document.getElementById('descriptionError').innerHTML = '*Description is required';
                document.getElementById('descriptionError').style.color = 'red';
                document.getElementById('description').style.borderColor = 'red';
                isValid = false;
            } else {
                document.getElementById('descriptionError').innerHTML = '';
                document.getElementById('description').style.borderColor = '#3cf696';
            }

            // Validate available stock
            if (isNaN(availableStock) || availableStock <= 0) {
                document.getElementById('availableStockError').innerHTML = '*Available Stock must be a positive number';
                document.getElementById('availableStockError').style.color = 'red';
                document.getElementById('availableStock').style.borderColor = 'red';
                isValid = false;
            } else {
                document.getElementById('availableStockError').innerHTML = '';
                document.getElementById('availableStock').style.borderColor = '#3cf696';
            }

            // Validate category
            if (category === '') {
                document.getElementById('categoryError').innerHTML = '*Category is required';
                document.getElementById('categoryError').style.color = 'red';
                document.getElementById('category').style.borderColor = 'red';
                isValid = false;
            } else {
                document.getElementById('categoryError').innerHTML = '';
                document.getElementById('category').style.borderColor = '#3cf696';
            }

            // Validate image
            if (!image || image.length === 0) {
                document.getElementById('imageError').innerHTML = '*Image is required';
                document.getElementById('imageError').style.color = 'red';
                document.getElementById('image').style.borderColor = 'red';
                isValid = false;
            } else {
                document.getElementById('imageError').innerHTML = '';
                document.getElementById('image').style.borderColor = '#3cf696';
            }

            //Valid color
            var color = document.getElementById('color').value.trim();
            if (color === '') {
                document.getElementById('colorError').innerHTML = '*Color is required';
                document.getElementById('colorError').style.color = 'red';
                document.getElementById('color').style.borderColor = 'red';
                isValid = false;
            } else {
                document.getElementById('colorError').innerHTML = '';
                document.getElementById('color').style.borderColor = '#3cf696';
            }

            return isValid;
        }


    </script>



</body>

</html>